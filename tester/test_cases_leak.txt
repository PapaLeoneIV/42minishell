input:-echo "ciao"
-
input:-echo "$USER"
-
input:-echo '"$USER"'
-
input:-echo "ciao" | grep x
-
input:-echo grep "test" $HOME/$PWD_ird
-
input:-echo "cat $HOME/testfile > $USER/output"
-
input:-echo "$PATH > " path contents.txt""| dsasdasda | dasdasdas| dsadsad 
-
input:-echo mkdir $HOME/"new dir"
-
input:-echo 'x'"echo "    echo "$USER"cat"$USER"
-
input:-echo cat "'avc'     c"
-
input:-echo '"''"'
-
input:-echo $SDASS
-
input:-echo "'$USE'R"
-
input:-echo "Nested > "$USE'"R"'q"uote"
-
input:-echo cat $HOME'/'config | grep "setting=" > $USER/config_backup
-
input:-echo grep "test" >$HOME/$PWD_ird
-
input:-echo "This is a line break\nNew line"
-
input:-echo "Empty var: $UNSET_VAR"
-
input:-echo "Listing $HOME/*.txt"
-
input:-echo 'The missing variable $MISSING_VAR is here'
-
input:-echo "Unknown path: $UNSET_PATH/$UNDEFINED_DIR"
-
input:-echo 'The missing variable $MISSING_VAR is here'
-
input:-echo "No vars: $VOID1, $VOID2, and $VOID3"
-
input:-echo 'Why would "$NON_EXISTENT" even show up?'
-
input:-echo "It's '$NOT_THERE' fault"
-
input:-echo "'    "          b          'casa'
-
input:-echo$
-
input:-echo$USER
-
input:-echo $ $ $
-
input:-echo $PWD $ $
-
input:-echo ">|"
-
input:-echo "$'USER'"
-
input:-echo $'USE'R
-
input:-echo "$U'SE'R"
-
input:-echo emm"a |><"
-
input:-ls | grep .txt
-
input:-cat file.txt | sort | uniq
-
input:-ps aux | grep nginx | awk '{print $2}'
-
input:-echo "hello world" | tr '[:lower:]' '[:upper:]'
-
input:-find . -type f | xargs grep "searchTerm"
-
input:-cat filedoesnotexist.txt | sort
-
input:-dmesg | grep hda | less
-
input:-netstat -tulpn | grep LISTEN
-
input:-df -h | grep /dev/sda1 | awk '{print $5}'
-
input:-ls -l | awk '{print $9}' | sort -r
-
input:-uptime | cut -d, -f1
-
input:-echo "This is a test" > test.txt; cat test.txt | wc -l
-
input:-ls | nonexistingcommand
-
input:-cat file1.txt file2.txt | sort | uniq -d
-
input:-ls -l | awk '{print $9}' | sort -r
-
input:-uptime | cut -d, -f1
-
input:-echo "This is a test" > test.txt; cat test.txt | wc -l
-
input:-ls | nonexistingcommand
-
input:-cat file1.txt file2.txt | sort | uniq -d
-
input:-ps aux | head -n 1; ps aux | tail -n +2 | sort -rnk 4
-
input:-who | sort | more
-
input:-find / -name "*.conf" | xargs grep "ServerName" 2> /dev/null
-
input:-echo "User input" | sudo tee userinput.txt
-
input:-grep 'pattern' file.txt | sed 's/pattern/replacement/' | awk '{print $1}'
-
input:-tail -f /var/log/messages | grep error | tee errors.log
-